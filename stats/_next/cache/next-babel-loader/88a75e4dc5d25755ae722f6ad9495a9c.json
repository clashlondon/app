{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nclass WarUser {\n  constructor({\n    name,\n    wins,\n    battlesPlayed,\n    cardsEarned,\n    numberOfBattles\n  }) {\n    this.name = name;\n    this.wins = wins;\n    this.battles = battlesPlayed;\n    this.totalBattles = numberOfBattles;\n    this.cards = cardsEarned;\n  }\n\n  addToKey(key, value) {\n    this[key] += value;\n  }\n\n  get loss() {\n    return this.battles - this.wins;\n  }\n\n  get ratio() {\n    return this.wins / this.battles;\n  }\n\n  get battlesMissed() {\n    return this.totalBattles - this.battles;\n  }\n\n  get inRespect() {\n    return this.ratio >= 0.75 || this.loss === 0 && this.missed === 0;\n  }\n\n  get inDanger() {\n    return this.ratio <= 0.25 || this.battlesMissed >= 3;\n  }\n\n  get score() {\n    return this.wins * this.ratio - this.battlesMissed;\n  }\n\n}\n\nconst processData = items => {\n  let participants = [];\n\n  const findUser = name => participants.find(p => p.name === name);\n\n  items.forEach((war, i) => {\n    war.participants.forEach(user => {\n      var userObj = findUser(user.name);\n\n      if (!!userObj) {\n        userObj.addToKey('battles', user.battlesPlayed);\n        userObj.addToKey('wins', user.wins);\n        userObj.addToKey('cards', user.cardsEarned);\n        userObj.addToKey('totalBattles', user.numberOfBattles);\n      } else {\n        userObj = new WarUser(user);\n        participants.push(userObj);\n      }\n    });\n  });\n  return participants;\n};\n\nconst sortData = (items, key, alt) => {\n  return items.sort((a, b) => alt ? a[key] - b[key] : b[key] - a[key]);\n};\n\nconst WarPerformance = props => {\n  console.log(props);\n  const {\n    0: sort,\n    1: setSort\n  } = useState('wins');\n  const {\n    0: alt,\n    1: setAlt\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState(processData(props.items));\n  const sortedData = sortData(data, sort, alt);\n\n  const clickSort = newSort => {\n    if (newSort === sort) {\n      setAlt(!alt);\n    } else {\n      setSort(newSort);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"table\", {\n    className: \"jsx-4275466315\" + \" \" + 'table table-sm'\n  }, __jsx(\"thead\", {\n    className: \"jsx-4275466315\"\n  }, __jsx(\"tr\", {\n    className: \"jsx-4275466315\" + \" \" + 'header'\n  }, __jsx(\"th\", {\n    className: \"jsx-4275466315\"\n  }, \"Name\"), __jsx(\"th\", {\n    onClick: () => clickSort('cards'),\n    className: \"jsx-4275466315\" + \" \" + ((sort === 'cards' ? 'active' : null) || \"\")\n  }, \"Total Battles\"), __jsx(\"th\", {\n    onClick: () => clickSort('wins'),\n    className: \"jsx-4275466315\" + \" \" + ((sort === 'wins' ? 'active' : null) || \"\")\n  }, \"Wins\"), __jsx(\"th\", {\n    onClick: () => clickSort('loss'),\n    className: \"jsx-4275466315\" + \" \" + ((sort === 'loss' ? 'active' : null) || \"\")\n  }, \"Losses\"), __jsx(\"th\", {\n    onClick: () => clickSort('ratio'),\n    className: \"jsx-4275466315\" + \" \" + ((sort === 'ratio' ? 'active' : null) || \"\")\n  }, \"Win/Loss Ratio\"), __jsx(\"th\", {\n    onClick: () => clickSort('battlesMissed'),\n    className: \"jsx-4275466315\" + \" \" + ((sort === 'battlesMissed' ? 'active' : null) || \"\")\n  }, \"Battles Missed\"), __jsx(\"th\", {\n    onClick: () => clickSort('score'),\n    className: \"jsx-4275466315\" + \" \" + ((sort === 'score' ? 'active' : null) || \"\")\n  }, \"Score\"))), __jsx(\"tbody\", {\n    className: \"jsx-4275466315\"\n  }, sortedData.map((p, i) => {\n    let className = p.score < 0 ? 'bg-danger' : p.score < 0.3 ? 'table-danger' : p.score > 5 ? 'table-success' : p.score > 8 ? 'table-warning' : null;\n    return __jsx(\"tr\", {\n      key: i,\n      className: \"jsx-4275466315\"\n    }, __jsx(\"td\", {\n      className: \"jsx-4275466315\" + \" \" + (className || \"\")\n    }, p.name), __jsx(\"td\", {\n      className: \"jsx-4275466315\"\n    }, p.totalBattles), __jsx(\"td\", {\n      className: \"jsx-4275466315\"\n    }, p.wins), __jsx(\"td\", {\n      className: \"jsx-4275466315\"\n    }, p.loss), __jsx(\"td\", {\n      className: \"jsx-4275466315\"\n    }, p.ratio), __jsx(\"td\", {\n      className: \"jsx-4275466315\"\n    }, p.battlesMissed), __jsx(\"td\", {\n      className: \"jsx-4275466315\"\n    }, p.score));\n  }))), __jsx(_JSXStyle, {\n    id: \"4275466315\"\n  }, [\".table.jsx-4275466315{width:100%;}\", \".table.jsx-4275466315 thead.jsx-4275466315{font-weight:bold;}\", \".table.jsx-4275466315 thead.jsx-4275466315 th.jsx-4275466315{cursor:pointer;}\", \".table.jsx-4275466315 thead.jsx-4275466315 th.active.jsx-4275466315{color:blue;}\"]));\n};\n\nexport default WarPerformance;","map":null,"metadata":{},"sourceType":"module"}
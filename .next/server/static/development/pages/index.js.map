{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./api/index.js","webpack:///./components/WarPerformance.js","webpack:///./pages/index.js","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"react\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import fetch from 'isomorphic-unfetch';\n\nconst headers = {\n  authorization: `Bearer ${process.env.CLASH_ROYALE_API_KEY}`\n}\n\nexport async function Clan () {\n  const res = await fetch(`https://api.clashroyale.com/v1/clans/%238G290Q0`, { headers })\n  const data = await res.json()\n  return data\n}\n\nexport async function Members () {\n  const res = await fetch(`https://api.clashroyale.com/v1/clans/%238G290Q0/members`, { headers })\n  const data = await res.json()\n  return data\n}\n\nexport async function WarLog () {\n  const res = await fetch(`https://api.clashroyale.com/v1/clans/%238G290Q0/warlog`, { headers })\n  const data = await res.json()\n  return data\n}\n\nexport async function CurrentWar () {\n  const res = await fetch(`https://api.clashroyale.com/v1/clans/%238G290Q0/currentwar`, { headers })\n  const data = await res.json()\n  return data\n}\n","import { useState } from 'react'\n\nclass WarUser {\n  constructor({name, wins, battlesPlayed, cardsEarned, numberOfBattles}) {\n    this.name = name\n    this.wins = wins\n    this.battles = battlesPlayed\n    this.totalBattles = numberOfBattles\n    this.cards = cardsEarned\n    this.isMember = true\n    this.lossStreak = 0\n    this.winStreak = 0\n  }\n\n  addToKey(key, value) {\n    this[key] += value\n  }\n\n  setMember(state) {\n    this.isMember = state\n  }\n\n  winLoss(wins, losses) {\n    if (losses > 0 && wins === 0) {\n      this.lossStreak += losses\n      this.winStreak = 0\n    }\n    if (wins > 0) {\n      this.winStreak += wins\n      this.lossStreak = 0\n    }\n  }\n\n  get loss() {\n    return this.battles - this.wins\n  }\n\n  get ratio() {\n    return this.wins / this.totalBattles\n  }\n\n  get battlesMissed() {\n    return this.totalBattles - this.battles\n  }\n\n  get inRespect() {\n    return this.ratio >= 0.75 || this.loss === 0 && this.missed === 0\n  }\n\n  get inDanger() {\n    return this.ratio <= 0.25 || this.battlesMissed >= 3\n  }\n\n  get score() {\n    if (this.battles === 0) return 0\n    return (this.wins * (this.wins / this.battles) - ((this.battlesMissed * 2.5) * this.battlesMissed) + (this.wins * 0.5)).toFixed(2)\n  }\n}\n\nconst processData = (items, clan) => {\n  let participants = []\n  const findUser = (name) => participants.find((p) => p.name === name);\n  items.forEach((war, i) => {\n      war.participants.forEach((user) => {\n          var userObj = findUser(user.name)\n          if (!!userObj) {\n              userObj.addToKey('battles', user.battlesPlayed)\n              userObj.addToKey('wins', user.wins)\n              userObj.addToKey('cards', user.cardsEarned)\n              userObj.addToKey('totalBattles', user.numberOfBattles)\n          } else {\n              userObj = new WarUser(user)\n              participants.push(userObj)\n          }\n          // set is member\n          userObj.setMember(clan.memberList.find(m => m.name === userObj.name))\n          // record wins losses per war\n          let losses = user.numberOfBattles - user.wins\n          userObj.winLoss(user.wins, losses)\n      })\n  })\n  return participants\n}\n\nconst sortData = (items, key, alt) => {\n  return items.sort((a, b) => alt ? a[key] - b[key] : b[key] - a[key])\n}\n\nconst WarPerformance = (props) => {\n  const [sort, setSort] = useState('score')\n  const [alt, setAlt] = useState(false)\n  const [data, setData] = useState(processData(props.items, props.clan))\n\n  const sortedData = sortData(data, sort, alt)\n\n  const clickSort = (newSort) => {\n    if (newSort === sort) {\n      setAlt(!alt)\n    } else {\n      setSort(newSort)\n    }\n  }\n\n  return (\n    <>\n      <div className=\"table-responsive\">\n        <table className={'table table-sm'}>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th className={sort === 'score' ? 'active' : null} onClick={(() => clickSort('score'))}>Score</th>\n              <th className={sort === 'totalBattles' ? 'active' : null} onClick={(() => clickSort('totalBattles'))}>Total Battles</th>\n              <th className={sort === 'wins' ? 'active' : null} onClick={(() => clickSort('wins'))}>Wins</th>\n              <th className={sort === 'loss' ? 'active' : null} onClick={(() => clickSort('loss'))}>Losses</th>\n              <th className={sort === 'winStreak' ? 'active' : null} onClick={(() => clickSort('winStreak'))}>Win Streak</th>\n              <th className={sort === 'lossStreak' ? 'active' : null} onClick={(() => clickSort('lossStreak'))}>Loss Streak</th>\n              <th className={sort === 'ratio' ? 'active' : null} onClick={(() => clickSort('ratio'))}>Win Ratio<span>wins/battles</span></th>\n              <th className={sort === 'battlesMissed' ? 'active' : null} onClick={(() => clickSort('battlesMissed'))}>Battles Missed</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedData.map((p, i) => {\n              let className = p.score < -1 ? 'bg-danger' : p.score >= 8 ? 'table-warning' : p.score >= 2 ? 'table-success' : null\n              className += p.isMember ? ' member' : ''\n              return (\n                <tr key={i}>\n                  <td className={className}>{p.name}</td>\n                  <td>{p.score}</td>\n                  <td>{p.totalBattles}</td>\n                  <td>{p.wins}</td>\n                  <td>{p.loss}</td>\n                  <td>{p.winStreak}</td>\n                  <td>{p.lossStreak}</td>\n                  <td>{p.ratio.toFixed(2)}</td>\n                  <td>{p.battlesMissed}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <style jsx>{`\n        .table-responsive {\n          overflow-x: initial;\n        }\n        .table {\n          width: 100%;\n        }\n        .table thead {\n          font-weight: bold;\n        }\n        .table thead th {\n          cursor: pointer;\n          position: sticky;\n          top: 0;\n          background: white;\n          min-width: 8rem;\n        }\n        .table thead th span {\n          display: block;\n          font-size: 0.5rem;\n        }\n        .table thead th.active {\n          color: blue;\n        }\n        table tbody td:first-child:not(.member) {\n          text-decoration: line-through;\n          font-weight: bold;\n          background-color: grey !important;\n        }\n        `}\n      </style>\n    </>\n  )\n}\n\nexport default WarPerformance;\n","import { WarLog, Clan } from '../api'\n\nimport WarPerformance from '../components/WarPerformance'\n\nconst ClanPage = (props) => {\n  return (\n    <>\n      <header className=\"p-4\">\n        <h1>Warlog</h1>\n      </header>\n      <WarPerformance clan={props.clan} {...props.warlog}/>\n    </>\n  )\n}\n\nClanPage.getInitialProps = async function() {\n  const warlog = await WarLog()\n  warlog.items.reverse() // flip order or wars oldest first\n  const clan = await Clan()\n  return { warlog, clan }\n}\n\nexport default ClanPage\n","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"react\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA;AACA;AAwjCA;AAAA;AAAA;AAsEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AChLA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}
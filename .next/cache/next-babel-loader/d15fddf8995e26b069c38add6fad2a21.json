{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/Sites/london-clash-nextjs/components/ClanTable.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react'; //\n// const processData = (items) => {\n//   let participants = []\n//   const findUser = (name) => participants.find((p) => p.name === name);\n//   items.forEach((war, i) => {\n//       war.participants.forEach((user) => {\n//           var userObj = findUser(user.name)\n//           if (!!userObj) {\n//               userObj.addToKey('battles', user.battlesPlayed)\n//               userObj.addToKey('wins', user.wins)\n//               userObj.addToKey('cards', user.cardsEarned)\n//               userObj.addToKey('totalBattles', user.numberOfBattles)\n//           } else {\n//               userObj = new WarUser(user)\n//               participants.push(userObj)\n//           }\n//       })\n//   })\n//   return participants\n// }\n//\n\nconst sortData = (items, key, alt) => {\n  return items.sort((a, b) => alt ? a[key] - b[key] : b[key] - a[key]);\n};\n\nconst ClanTable = props => {\n  const flatMemberList = props.memberList.forEach(m => Object.keys(m).reduce((r, k) => r.concat(k, object[k]), []));\n  const {\n    0: sort,\n    1: setSort\n  } = useState('score');\n  const {\n    0: alt,\n    1: setAlt\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState(props.memberList.flat(1));\n  const sortedData = sortData(data, sort, alt);\n\n  const clickSort = newSort => {\n    if (newSort === sort) {\n      setAlt(!alt);\n    } else {\n      setSort(newSort);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-309811624\" + \" \" + \"table-responsive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"table\", {\n    className: \"jsx-309811624\" + \" \" + 'table table-sm',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    className: \"jsx-309811624\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    className: \"jsx-309811624\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, Object.keys(data[0]).map(k => __jsx(\"th\", {\n    onClick: () => clickSort(k),\n    className: \"jsx-309811624\" + \" \" + ((sort === k ? 'active' : null) || \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, k)))), __jsx(\"tbody\", {\n    className: \"jsx-309811624\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, sortedData.map((p, i) => {\n    // let className = p.score < -1 ? 'bg-danger' : p.score <= 1 ? 'table-danger' : p.score >= 8 ? 'table-warning' : 'table-success'\n    return __jsx(\"tr\", {\n      key: i,\n      className: \"jsx-309811624\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, Object.keys(p).map(k => __jsx(\"td\", {\n      className: \"jsx-309811624\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, p[k])));\n  })))), __jsx(_JSXStyle, {\n    id: \"309811624\",\n    __self: this\n  }, \".table-responsive.jsx-309811624{overflow-x:initial;}.table.jsx-309811624{width:100%;}.table.jsx-309811624 thead.jsx-309811624{font-weight:bold;}.table.jsx-309811624 thead.jsx-309811624 th.jsx-309811624{cursor:pointer;position:-webkit-sticky;position:sticky;top:0;background:white;min-width:8rem;}.table.jsx-309811624 thead.jsx-309811624 th.jsx-309811624 span.jsx-309811624{display:block;font-size:0.5rem;}.table.jsx-309811624 thead.jsx-309811624 th.active.jsx-309811624{color:blue;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYnAvU2l0ZXMvbG9uZG9uLWNsYXNoLW5leHRqcy9jb21wb25lbnRzL0NsYW5UYWJsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRWtCLEFBRzhCLEFBR1IsQUFHTSxBQUdGLEFBT0QsQUFJSCxXQWhCYixBQWlCQSxHQUptQixDQVBELEVBSGxCLEVBTkEsWUFpQkEsd0JBUFEsTUFDVyxpQkFDRixlQUNqQiIsImZpbGUiOiIvVXNlcnMvbWJwL1NpdGVzL2xvbmRvbi1jbGFzaC1uZXh0anMvY29tcG9uZW50cy9DbGFuVGFibGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuXG4vL1xuLy8gY29uc3QgcHJvY2Vzc0RhdGEgPSAoaXRlbXMpID0+IHtcbi8vICAgbGV0IHBhcnRpY2lwYW50cyA9IFtdXG4vLyAgIGNvbnN0IGZpbmRVc2VyID0gKG5hbWUpID0+IHBhcnRpY2lwYW50cy5maW5kKChwKSA9PiBwLm5hbWUgPT09IG5hbWUpO1xuLy8gICBpdGVtcy5mb3JFYWNoKCh3YXIsIGkpID0+IHtcbi8vICAgICAgIHdhci5wYXJ0aWNpcGFudHMuZm9yRWFjaCgodXNlcikgPT4ge1xuLy8gICAgICAgICAgIHZhciB1c2VyT2JqID0gZmluZFVzZXIodXNlci5uYW1lKVxuLy8gICAgICAgICAgIGlmICghIXVzZXJPYmopIHtcbi8vICAgICAgICAgICAgICAgdXNlck9iai5hZGRUb0tleSgnYmF0dGxlcycsIHVzZXIuYmF0dGxlc1BsYXllZClcbi8vICAgICAgICAgICAgICAgdXNlck9iai5hZGRUb0tleSgnd2lucycsIHVzZXIud2lucylcbi8vICAgICAgICAgICAgICAgdXNlck9iai5hZGRUb0tleSgnY2FyZHMnLCB1c2VyLmNhcmRzRWFybmVkKVxuLy8gICAgICAgICAgICAgICB1c2VyT2JqLmFkZFRvS2V5KCd0b3RhbEJhdHRsZXMnLCB1c2VyLm51bWJlck9mQmF0dGxlcylcbi8vICAgICAgICAgICB9IGVsc2Uge1xuLy8gICAgICAgICAgICAgICB1c2VyT2JqID0gbmV3IFdhclVzZXIodXNlcilcbi8vICAgICAgICAgICAgICAgcGFydGljaXBhbnRzLnB1c2godXNlck9iailcbi8vICAgICAgICAgICB9XG4vLyAgICAgICB9KVxuLy8gICB9KVxuLy8gICByZXR1cm4gcGFydGljaXBhbnRzXG4vLyB9XG4vL1xuICBjb25zdCBzb3J0RGF0YSA9IChpdGVtcywga2V5LCBhbHQpID0+IHtcbiAgICByZXR1cm4gaXRlbXMuc29ydCgoYSwgYikgPT4gYWx0ID8gYVtrZXldIC0gYltrZXldIDogYltrZXldIC0gYVtrZXldKVxuICB9XG5cbmNvbnN0IENsYW5UYWJsZSA9IChwcm9wcykgPT4ge1xuXG4gIGNvbnN0IGZsYXRNZW1iZXJMaXN0ID0gcHJvcHMubWVtYmVyTGlzdC5mb3JFYWNoKChtKSA9PiBPYmplY3Qua2V5cyhtKS5yZWR1Y2UoKHIsIGspID0+IHIuY29uY2F0KGssIG9iamVjdFtrXSksIFtdKSk7XG5cbiAgY29uc3QgW3NvcnQsIHNldFNvcnRdID0gdXNlU3RhdGUoJ3Njb3JlJylcbiAgY29uc3QgW2FsdCwgc2V0QWx0XSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSB1c2VTdGF0ZShwcm9wcy5tZW1iZXJMaXN0LmZsYXQoMSkpXG5cbiAgY29uc3Qgc29ydGVkRGF0YSA9IHNvcnREYXRhKGRhdGEsIHNvcnQsIGFsdClcblxuICBjb25zdCBjbGlja1NvcnQgPSAobmV3U29ydCkgPT4ge1xuICAgIGlmIChuZXdTb3J0ID09PSBzb3J0KSB7XG4gICAgICBzZXRBbHQoIWFsdClcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U29ydChuZXdTb3J0KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGFibGUtcmVzcG9uc2l2ZVwiPlxuICAgICAgICA8dGFibGUgY2xhc3NOYW1lPXsndGFibGUgdGFibGUtc20nfT5cbiAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgIHtPYmplY3Qua2V5cyhkYXRhWzBdKS5tYXAoayA9PiA8dGggY2xhc3NOYW1lPXtzb3J0ID09PSBrID8gJ2FjdGl2ZScgOiBudWxsfSBvbkNsaWNrPXsoKCkgPT4gY2xpY2tTb3J0KGspKX0+e2t9PC90aD4pfVxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICA8L3RoZWFkPlxuICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgIHtzb3J0ZWREYXRhLm1hcCgocCwgaSkgPT4ge1xuICAgICAgICAgICAgICAvLyBsZXQgY2xhc3NOYW1lID0gcC5zY29yZSA8IC0xID8gJ2JnLWRhbmdlcicgOiBwLnNjb3JlIDw9IDEgPyAndGFibGUtZGFuZ2VyJyA6IHAuc2NvcmUgPj0gOCA/ICd0YWJsZS13YXJuaW5nJyA6ICd0YWJsZS1zdWNjZXNzJ1xuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDx0ciBrZXk9e2l9PlxuICAgICAgICAgICAgICAgICAge09iamVjdC5rZXlzKHApLm1hcCgoaykgPT4gPHRkPntwW2tdfTwvdGQ+KX1cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICA8L3RhYmxlPlxuICAgICAgPC9kaXY+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC50YWJsZS1yZXNwb25zaXZlIHtcbiAgICAgICAgICBvdmVyZmxvdy14OiBpbml0aWFsO1xuICAgICAgICB9XG4gICAgICAgIC50YWJsZSB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICAgICAgLnRhYmxlIHRoZWFkIHtcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgfVxuICAgICAgICAudGFibGUgdGhlYWQgdGgge1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICBtaW4td2lkdGg6IDhyZW07XG4gICAgICAgIH1cbiAgICAgICAgLnRhYmxlIHRoZWFkIHRoIHNwYW4ge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC41cmVtO1xuICAgICAgICB9XG4gICAgICAgIC50YWJsZSB0aGVhZCB0aC5hY3RpdmUge1xuICAgICAgICAgIGNvbG9yOiBibHVlO1xuICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICA8L3N0eWxlPlxuICAgIDwvPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IENsYW5UYWJsZTtcbiJdfQ== */\\n/*@ sourceURL=/Users/mbp/Sites/london-clash-nextjs/components/ClanTable.js */\"));\n};\n\nexport default ClanTable;","map":{"version":3,"sources":["/Users/mbp/Sites/london-clash-nextjs/components/ClanTable.js"],"names":["useState","sortData","items","key","alt","sort","a","b","ClanTable","props","flatMemberList","memberList","forEach","m","Object","keys","reduce","r","k","concat","object","setSort","setAlt","data","setData","flat","sortedData","clickSort","newSort","map","p","i"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,KAAqB;AACpC,SAAOF,KAAK,CAACG,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUH,GAAG,GAAGE,CAAC,CAACH,GAAD,CAAD,GAASI,CAAC,CAACJ,GAAD,CAAb,GAAqBI,CAAC,CAACJ,GAAD,CAAD,GAASG,CAAC,CAACH,GAAD,CAAvD,CAAP;AACD,CAFD;;AAIF,MAAMK,SAAS,GAAIC,KAAD,IAAW;AAE3B,QAAMC,cAAc,GAAGD,KAAK,CAACE,UAAN,CAAiBC,OAAjB,CAA0BC,CAAD,IAAOC,MAAM,CAACC,IAAP,CAAYF,CAAZ,EAAeG,MAAf,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,MAAF,CAASD,CAAT,EAAYE,MAAM,CAACF,CAAD,CAAlB,CAAhC,EAAwD,EAAxD,CAAhC,CAAvB;AAEA,QAAM;AAAA,OAACb,IAAD;AAAA,OAAOgB;AAAP,MAAkBrB,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM;AAAA,OAACI,GAAD;AAAA,OAAMkB;AAAN,MAAgBtB,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM;AAAA,OAACuB,IAAD;AAAA,OAAOC;AAAP,MAAkBxB,QAAQ,CAACS,KAAK,CAACE,UAAN,CAAiBc,IAAjB,CAAsB,CAAtB,CAAD,CAAhC;AAEA,QAAMC,UAAU,GAAGzB,QAAQ,CAACsB,IAAD,EAAOlB,IAAP,EAAaD,GAAb,CAA3B;;AAEA,QAAMuB,SAAS,GAAIC,OAAD,IAAa;AAC7B,QAAIA,OAAO,KAAKvB,IAAhB,EAAsB;AACpBiB,MAAAA,MAAM,CAAC,CAAClB,GAAF,CAAN;AACD,KAFD,MAEO;AACLiB,MAAAA,OAAO,CAACO,OAAD,CAAP;AACD;AACF,GAND;;AAQA,SACE,4BACE;AAAA,uCAAe,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,uCAAkB,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,MAAM,CAACC,IAAP,CAAYQ,IAAI,CAAC,CAAD,CAAhB,EAAqBM,GAArB,CAAyBX,CAAC,IAAI;AAA6C,IAAA,OAAO,EAAG,MAAMS,SAAS,CAACT,CAAD,CAAtE;AAAA,yCAAeb,IAAI,KAAKa,CAAT,GAAa,QAAb,GAAwB,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6EA,CAA7E,CAA9B,CADH,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,UAAU,CAACG,GAAX,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB;AACA,WACE;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjB,MAAM,CAACC,IAAP,CAAYe,CAAZ,EAAeD,GAAf,CAAoBX,CAAD,IAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKY,CAAC,CAACZ,CAAD,CAAN,CAA1B,CADH,CADF;AAKD,GAPA,CADH,CANF,CADF,CADF;AAAA;AAAA;AAAA,+oJADF;AAiDD,CAnED;;AAqEA,eAAeV,SAAf","sourcesContent":["import { useState } from 'react'\n\n//\n// const processData = (items) => {\n//   let participants = []\n//   const findUser = (name) => participants.find((p) => p.name === name);\n//   items.forEach((war, i) => {\n//       war.participants.forEach((user) => {\n//           var userObj = findUser(user.name)\n//           if (!!userObj) {\n//               userObj.addToKey('battles', user.battlesPlayed)\n//               userObj.addToKey('wins', user.wins)\n//               userObj.addToKey('cards', user.cardsEarned)\n//               userObj.addToKey('totalBattles', user.numberOfBattles)\n//           } else {\n//               userObj = new WarUser(user)\n//               participants.push(userObj)\n//           }\n//       })\n//   })\n//   return participants\n// }\n//\n  const sortData = (items, key, alt) => {\n    return items.sort((a, b) => alt ? a[key] - b[key] : b[key] - a[key])\n  }\n\nconst ClanTable = (props) => {\n\n  const flatMemberList = props.memberList.forEach((m) => Object.keys(m).reduce((r, k) => r.concat(k, object[k]), []));\n\n  const [sort, setSort] = useState('score')\n  const [alt, setAlt] = useState(false)\n  const [data, setData] = useState(props.memberList.flat(1))\n\n  const sortedData = sortData(data, sort, alt)\n\n  const clickSort = (newSort) => {\n    if (newSort === sort) {\n      setAlt(!alt)\n    } else {\n      setSort(newSort)\n    }\n  }\n\n  return (\n    <>\n      <div className=\"table-responsive\">\n        <table className={'table table-sm'}>\n          <thead>\n            <tr>\n              {Object.keys(data[0]).map(k => <th className={sort === k ? 'active' : null} onClick={(() => clickSort(k))}>{k}</th>)}\n            </tr>\n          </thead>\n          <tbody>\n            {sortedData.map((p, i) => {\n              // let className = p.score < -1 ? 'bg-danger' : p.score <= 1 ? 'table-danger' : p.score >= 8 ? 'table-warning' : 'table-success'\n              return (\n                <tr key={i}>\n                  {Object.keys(p).map((k) => <td>{p[k]}</td>)}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <style jsx>{`\n        .table-responsive {\n          overflow-x: initial;\n        }\n        .table {\n          width: 100%;\n        }\n        .table thead {\n          font-weight: bold;\n        }\n        .table thead th {\n          cursor: pointer;\n          position: sticky;\n          top: 0;\n          background: white;\n          min-width: 8rem;\n        }\n        .table thead th span {\n          display: block;\n          font-size: 0.5rem;\n        }\n        .table thead th.active {\n          color: blue;\n        }\n        `}\n      </style>\n    </>\n  )\n}\n\nexport default ClanTable;\n"]},"metadata":{},"sourceType":"module"}
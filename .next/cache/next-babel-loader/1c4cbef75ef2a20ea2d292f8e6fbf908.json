{"ast":null,"code":"import _readOnlyError from \"@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nvar _jsxFileName = \"/Users/mbp/Sites/london-clash-nextjs/components/WarPerformance.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nvar WarUser =\n/*#__PURE__*/\nfunction () {\n  function WarUser(_ref) {\n    var name = _ref.name,\n        wins = _ref.wins,\n        battlesPlayed = _ref.battlesPlayed;\n\n    _classCallCheck(this, WarUser);\n\n    this.name = name;\n    this.wins = wins;\n    this.battles = battlesPlayed;\n  }\n\n  _createClass(WarUser, [{\n    key: \"addWins\",\n    value: function addWins(wins) {\n      this.wins += wins;\n    }\n  }, {\n    key: \"addBattles\",\n    value: function addBattles(battles) {\n      this.battles += battles;\n    }\n  }, {\n    key: \"ratio\",\n    get: function get() {\n      return this.wins / this.battles;\n    }\n  }]);\n\n  return WarUser;\n}();\n\nvar processData = function processData(items) {\n  var participants = [];\n\n  var findUser = function findUser(name) {\n    return participants.find(function (p) {\n      return p.name === name;\n    });\n  };\n\n  items.forEach(function (war, i) {\n    war.participants.forEach(function (user) {\n      var userObj = findUser(name);\n\n      if (!!userObj) {\n        userObj.addBattles(battlesPlayed);\n        userObj.addWins(wins);\n      } else {\n        userObj = new WarUser(user);\n        participants.push(userObj);\n      }\n    });\n  });\n  return participants.sort(function (a, b) {\n    return b[\"wins\"] - a[\"wins\"] || b[\"battlesPlayed\"] - a[\"battlesPlayed\"];\n  });\n};\n\nvar WarPerformance = function WarPerformance(props) {\n  var _useState = useState(['wins']),\n      sort = _useState[0],\n      setSort = _useState[1];\n\n  var state = 'hello';\n  console.log(state);\n  var data = processData(props.items);\n  console.log(data);\n  return __jsx(\"div\", {\n    className: \"jsx-3920773514\" + \" \" + 'table',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-3920773514\" + \" \" + 'header',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"span\", {\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Wins\"), __jsx(\"span\", {\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Battles\"), __jsx(\"span\", {\n    onClick: function onClick() {\n      return state = (_readOnlyError(\"state\"), 'blll');\n    },\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Ratio\")), data.map(function (p, i) {\n    return __jsx(\"div\", {\n      key: i,\n      className: \"jsx-3920773514\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"jsx-3920773514\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, p.name), __jsx(\"span\", {\n      className: \"jsx-3920773514\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, p.wins), __jsx(\"span\", {\n      className: \"jsx-3920773514\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, p.battlesPlayed), __jsx(\"span\", {\n      className: \"jsx-3920773514\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, p.wins / p.battlesPlayed));\n  }), __jsx(_JSXStyle, {\n    id: \"3920773514\",\n    __self: this\n  }, \".table.jsx-3920773514{width:100%;}.table.jsx-3920773514 .header.jsx-3920773514{font-weight:bold;}.table.jsx-3920773514>div.jsx-3920773514{display:grid;grid-template-columns:20% 20% 30% 30%;}.table.jsx-3920773514>div.jsx-3920773514 span.jsx-3920773514{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;text-align:left;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYnAvU2l0ZXMvbG9uZG9uLWNsYXNoLW5leHRqcy9jb21wb25lbnRzL1dhclBlcmZvcm1hbmNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlFa0IsQUFHc0IsQUFHTSxBQUdKLEFBS0QsV0FWZCxFQU13QyxJQUh4QyxrQ0FLQSxvQkFHa0IsZ0JBQ2xCIiwiZmlsZSI6Ii9Vc2Vycy9tYnAvU2l0ZXMvbG9uZG9uLWNsYXNoLW5leHRqcy9jb21wb25lbnRzL1dhclBlcmZvcm1hbmNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcblxuY2xhc3MgV2FyVXNlciB7XG4gIGNvbnN0cnVjdG9yKHtuYW1lLCB3aW5zLCBiYXR0bGVzUGxheWVkfSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLndpbnMgPSB3aW5zXG4gICAgdGhpcy5iYXR0bGVzID0gYmF0dGxlc1BsYXllZFxuICB9XG5cbiAgYWRkV2lucyh3aW5zKSB7XG4gICAgdGhpcy53aW5zICs9IHdpbnNcbiAgfVxuXG4gIGFkZEJhdHRsZXMoYmF0dGxlcykge1xuICAgIHRoaXMuYmF0dGxlcyArPSAgYmF0dGxlc1xuICB9XG5cbiAgZ2V0IHJhdGlvKCkge1xuICAgIHJldHVybiB0aGlzLndpbnMgLyB0aGlzLmJhdHRsZXNcbiAgfVxufVxuXG5jb25zdCBwcm9jZXNzRGF0YSA9IChpdGVtcykgPT4ge1xuICBsZXQgcGFydGljaXBhbnRzID0gW11cbiAgY29uc3QgZmluZFVzZXIgPSAobmFtZSkgPT4gcGFydGljaXBhbnRzLmZpbmQoKHApID0+IHAubmFtZSA9PT0gbmFtZSk7XG4gIGl0ZW1zLmZvckVhY2goKHdhciwgaSkgPT4ge1xuICAgICAgd2FyLnBhcnRpY2lwYW50cy5mb3JFYWNoKCh1c2VyKSA9PiB7XG4gICAgICAgICAgdmFyIHVzZXJPYmogPSBmaW5kVXNlcihuYW1lKVxuICAgICAgICAgIGlmICghIXVzZXJPYmopIHtcbiAgICAgICAgICAgICAgdXNlck9iai5hZGRCYXR0bGVzKGJhdHRsZXNQbGF5ZWQpXG4gICAgICAgICAgICAgIHVzZXJPYmouYWRkV2lucyh3aW5zKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHVzZXJPYmogPSBuZXcgV2FyVXNlcih1c2VyKVxuICAgICAgICAgICAgICBwYXJ0aWNpcGFudHMucHVzaCh1c2VyT2JqKVxuICAgICAgICAgIH1cbiAgICAgIH0pXG4gIH0pXG5cbiAgcmV0dXJuIHBhcnRpY2lwYW50cy5zb3J0KChhLCBiKSA9PiBiW1wid2luc1wiXSAtIGFbXCJ3aW5zXCJdIHx8IGJbXCJiYXR0bGVzUGxheWVkXCJdIC0gYVtcImJhdHRsZXNQbGF5ZWRcIl0pXG59XG5cbmNvbnN0IFdhclBlcmZvcm1hbmNlID0gKHByb3BzKSA9PiB7XG5cbiAgY29uc3QgW3NvcnQsIHNldFNvcnRdID0gdXNlU3RhdGUoWyd3aW5zJ10pXG4gIGNvbnN0IHN0YXRlID0gJ2hlbGxvJ1xuICBjb25zb2xlLmxvZyhzdGF0ZSlcblxuICBjb25zdCBkYXRhID0gcHJvY2Vzc0RhdGEocHJvcHMuaXRlbXMpXG4gIGNvbnNvbGUubG9nKGRhdGEpXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9eyd0YWJsZSd9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9eydoZWFkZXInfT5cbiAgICAgICAgPHNwYW4+TmFtZTwvc3Bhbj5cbiAgICAgICAgPHNwYW4+V2luczwvc3Bhbj5cbiAgICAgICAgPHNwYW4+QmF0dGxlczwvc3Bhbj5cbiAgICAgICAgPHNwYW4gb25DbGljaz17KCgpID0+IHN0YXRlID0gJ2JsbGwnKX0+UmF0aW88L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIHtkYXRhLm1hcCgocCwgaSkgPT4gKFxuICAgICAgICA8ZGl2IGtleT17aX0+XG4gICAgICAgICAgPHNwYW4+e3AubmFtZX08L3NwYW4+XG4gICAgICAgICAgPHNwYW4+e3Aud2luc308L3NwYW4+XG4gICAgICAgICAgPHNwYW4+e3AuYmF0dGxlc1BsYXllZH08L3NwYW4+XG4gICAgICAgICAgPHNwYW4+e3Aud2lucyAvIHAuYmF0dGxlc1BsYXllZH08L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSl9XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC50YWJsZSB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICAgICAgLnRhYmxlIC5oZWFkZXIge1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICB9XG4gICAgICAgIC50YWJsZSA+IGRpdiB7XG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDIwJSAyMCUgMzAlIDMwJTtcbiAgICAgICAgICAvLyBncmlkLXRlbXBsYXRlLXJvd3M6IDEwMHZoO1xuICAgICAgICB9XG4gICAgICAgIC50YWJsZSA+IGRpdiBzcGFuIHtcbiAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFdhclBlcmZvcm1hbmNlO1xuIl19 */\\n/*@ sourceURL=/Users/mbp/Sites/london-clash-nextjs/components/WarPerformance.js */\"));\n};\n\nexport default WarPerformance;","map":{"version":3,"sources":["/Users/mbp/Sites/london-clash-nextjs/components/WarPerformance.js"],"names":["useState","WarUser","name","wins","battlesPlayed","battles","processData","items","participants","findUser","find","p","forEach","war","i","user","userObj","addBattles","addWins","push","sort","a","b","WarPerformance","props","setSort","state","console","log","data","map"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nclass WarUser {\n  constructor({name, wins, battlesPlayed}) {\n    this.name = name\n    this.wins = wins\n    this.battles = battlesPlayed\n  }\n\n  addWins(wins) {\n    this.wins += wins\n  }\n\n  addBattles(battles) {\n    this.battles +=  battles\n  }\n\n  get ratio() {\n    return this.wins / this.battles\n  }\n}\n\nconst processData = (items) => {\n  let participants = []\n  const findUser = (name) => participants.find((p) => p.name === name);\n  items.forEach((war, i) => {\n      war.participants.forEach((user) => {\n          var userObj = findUser(name)\n          if (!!userObj) {\n              userObj.addBattles(battlesPlayed)\n              userObj.addWins(wins)\n          } else {\n              userObj = new WarUser(user)\n              participants.push(userObj)\n          }\n      })\n  })\n\n  return participants.sort((a, b) => b[\"wins\"] - a[\"wins\"] || b[\"battlesPlayed\"] - a[\"battlesPlayed\"])\n}\n\nconst WarPerformance = (props) => {\n\n  const [sort, setSort] = useState(['wins'])\n  const state = 'hello'\n  console.log(state)\n\n  const data = processData(props.items)\n  console.log(data)\n  return (\n    <div className={'table'}>\n      <div className={'header'}>\n        <span>Name</span>\n        <span>Wins</span>\n        <span>Battles</span>\n        <span onClick={(() => state = 'blll')}>Ratio</span>\n      </div>\n      {data.map((p, i) => (\n        <div key={i}>\n          <span>{p.name}</span>\n          <span>{p.wins}</span>\n          <span>{p.battlesPlayed}</span>\n          <span>{p.wins / p.battlesPlayed}</span>\n        </div>\n      ))}\n      <style jsx>{`\n        .table {\n          width: 100%;\n        }\n        .table .header {\n          font-weight: bold;\n        }\n        .table > div {\n          display: grid;\n          grid-template-columns: 20% 20% 30% 30%;\n          // grid-template-rows: 100vh;\n        }\n        .table > div span {\n          flex-grow: 1;\n          text-align: left;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default WarPerformance;\n"]},"metadata":{},"sourceType":"module"}
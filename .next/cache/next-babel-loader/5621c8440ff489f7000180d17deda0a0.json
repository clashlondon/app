{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/Sites/london-clash-nextjs/components/WarPerformance.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nclass WarUser {\n  constructor({\n    name,\n    wins,\n    battlesPlayed\n  }) {\n    this.name = name;\n    this.wins = wins;\n    this.battles = battlesPlayed;\n  }\n\n  addWins(wins) {\n    this.wins += wins;\n  }\n\n  addBattles(battles) {\n    this.battles += battles;\n  }\n\n  get ratio() {\n    return this.wins / this.battles || 0;\n  }\n\n}\n\nconst processData = items => {\n  let participants = [];\n\n  const findUser = name => participants.find(p => p.name === name);\n\n  items.forEach((war, i) => {\n    war.participants.forEach(user => {\n      var userObj = findUser(user.name);\n\n      if (!!userObj) {\n        userObj.addBattles(user.battlesPlayed);\n        userObj.addWins(user.wins);\n      } else {\n        userObj = new WarUser(user);\n        participants.push(userObj);\n      }\n    });\n  });\n  return participants;\n};\n\nlet alt = true;\n\nconst sortData = (items, key) => {\n  alt != alt;\n  return items.sort((a, b) => alt ? a[key] - b[key] : a[key] - b[key]);\n};\n\nconst WarPerformance = props => {\n  const {\n    0: sort,\n    1: setSort\n  } = useState(['wins']);\n  const {\n    0: data,\n    1: setData\n  } = useState(processData(props.items));\n  const state = 'hello';\n  const sortedData = sortData(data, sort);\n  return __jsx(\"table\", {\n    className: \"jsx-3920773514\" + \" \" + 'table',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    className: \"jsx-3920773514\" + \" \" + 'header',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"th\", {\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Wins\"), __jsx(\"th\", {\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Battles\"), __jsx(\"th\", {\n    onClick: () => setSort = 'blll',\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Ratio\")), sortedData.map((p, i) => __jsx(\"tr\", {\n    key: i,\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, p.name), __jsx(\"td\", {\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, p.wins), __jsx(\"td\", {\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, p.battles), __jsx(\"td\", {\n    className: \"jsx-3920773514\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, p.ratio))), __jsx(_JSXStyle, {\n    id: \"3920773514\",\n    __self: this\n  }, \".table.jsx-3920773514{width:100%;}.table.jsx-3920773514 .header.jsx-3920773514{font-weight:bold;}.table.jsx-3920773514>div.jsx-3920773514{display:grid;grid-template-columns:20% 20% 30% 30%;}.table.jsx-3920773514>div.jsx-3920773514 span.jsx-3920773514{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;text-align:left;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYnAvU2l0ZXMvbG9uZG9uLWNsYXNoLW5leHRqcy9jb21wb25lbnRzL1dhclBlcmZvcm1hbmNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNFa0IsQUFHc0IsQUFHTSxBQUdKLEFBS0QsV0FWZCxFQU13QyxJQUh4QyxrQ0FLQSxvQkFHa0IsZ0JBQ2xCIiwiZmlsZSI6Ii9Vc2Vycy9tYnAvU2l0ZXMvbG9uZG9uLWNsYXNoLW5leHRqcy9jb21wb25lbnRzL1dhclBlcmZvcm1hbmNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcblxuY2xhc3MgV2FyVXNlciB7XG4gIGNvbnN0cnVjdG9yKHtuYW1lLCB3aW5zLCBiYXR0bGVzUGxheWVkfSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLndpbnMgPSB3aW5zXG4gICAgdGhpcy5iYXR0bGVzID0gYmF0dGxlc1BsYXllZFxuICB9XG5cbiAgYWRkV2lucyh3aW5zKSB7XG4gICAgdGhpcy53aW5zICs9IHdpbnNcbiAgfVxuXG4gIGFkZEJhdHRsZXMoYmF0dGxlcykge1xuICAgIHRoaXMuYmF0dGxlcyArPSAgYmF0dGxlc1xuICB9XG5cbiAgZ2V0IHJhdGlvKCkge1xuICAgIHJldHVybiB0aGlzLndpbnMgLyB0aGlzLmJhdHRsZXMgfHwgMFxuICB9XG59XG5cbmNvbnN0IHByb2Nlc3NEYXRhID0gKGl0ZW1zKSA9PiB7XG4gIGxldCBwYXJ0aWNpcGFudHMgPSBbXVxuICBjb25zdCBmaW5kVXNlciA9IChuYW1lKSA9PiBwYXJ0aWNpcGFudHMuZmluZCgocCkgPT4gcC5uYW1lID09PSBuYW1lKTtcbiAgaXRlbXMuZm9yRWFjaCgod2FyLCBpKSA9PiB7XG4gICAgICB3YXIucGFydGljaXBhbnRzLmZvckVhY2goKHVzZXIpID0+IHtcbiAgICAgICAgICB2YXIgdXNlck9iaiA9IGZpbmRVc2VyKHVzZXIubmFtZSlcbiAgICAgICAgICBpZiAoISF1c2VyT2JqKSB7XG4gICAgICAgICAgICAgIHVzZXJPYmouYWRkQmF0dGxlcyh1c2VyLmJhdHRsZXNQbGF5ZWQpXG4gICAgICAgICAgICAgIHVzZXJPYmouYWRkV2lucyh1c2VyLndpbnMpXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdXNlck9iaiA9IG5ldyBXYXJVc2VyKHVzZXIpXG4gICAgICAgICAgICAgIHBhcnRpY2lwYW50cy5wdXNoKHVzZXJPYmopXG4gICAgICAgICAgfVxuICAgICAgfSlcbiAgfSlcbiAgcmV0dXJuIHBhcnRpY2lwYW50c1xufVxuXG5sZXQgYWx0ID0gdHJ1ZVxuY29uc3Qgc29ydERhdGEgPSAoaXRlbXMsIGtleSkgPT4ge1xuICBhbHQgIT0gYWx0XG4gIHJldHVybiBpdGVtcy5zb3J0KChhLCBiKSA9PiBhbHQgPyBhW2tleV0gLSBiW2tleV0gOiBhW2tleV0gLSBiW2tleV0pXG59XG5cbmNvbnN0IFdhclBlcmZvcm1hbmNlID0gKHByb3BzKSA9PiB7XG5cbiAgY29uc3QgW3NvcnQsIHNldFNvcnRdID0gdXNlU3RhdGUoWyd3aW5zJ10pXG4gIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IHVzZVN0YXRlKHByb2Nlc3NEYXRhKHByb3BzLml0ZW1zKSlcbiAgY29uc3Qgc3RhdGUgPSAnaGVsbG8nXG5cbiAgY29uc3Qgc29ydGVkRGF0YSA9IHNvcnREYXRhKGRhdGEsIHNvcnQpXG5cbiAgcmV0dXJuIChcbiAgICA8dGFibGUgY2xhc3NOYW1lPXsndGFibGUnfT5cbiAgICAgIDx0ciBjbGFzc05hbWU9eydoZWFkZXInfT5cbiAgICAgICAgPHRoPk5hbWU8L3RoPlxuICAgICAgICA8dGg+V2luczwvdGg+XG4gICAgICAgIDx0aD5CYXR0bGVzPC90aD5cbiAgICAgICAgPHRoIG9uQ2xpY2s9eygoKSA9PiBzZXRTb3J0ID0gJ2JsbGwnKX0+UmF0aW88L3RoPlxuICAgICAgPC90cj5cbiAgICAgIHtzb3J0ZWREYXRhLm1hcCgocCwgaSkgPT4gKFxuICAgICAgICA8dHIga2V5PXtpfT5cbiAgICAgICAgICA8dGQ+e3AubmFtZX08L3RkPlxuICAgICAgICAgIDx0ZD57cC53aW5zfTwvdGQ+XG4gICAgICAgICAgPHRkPntwLmJhdHRsZXN9PC90ZD5cbiAgICAgICAgICA8dGQ+e3AucmF0aW99PC90ZD5cbiAgICAgICAgPC90cj5cbiAgICAgICkpfVxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAudGFibGUge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgICAgIC50YWJsZSAuaGVhZGVyIHtcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgfVxuICAgICAgICAudGFibGUgPiBkaXYge1xuICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyMCUgMjAlIDMwJSAzMCU7XG4gICAgICAgICAgLy8gZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxMDB2aDtcbiAgICAgICAgfVxuICAgICAgICAudGFibGUgPiBkaXYgc3BhbiB7XG4gICAgICAgICAgZmxleC1ncm93OiAxO1xuICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L3RhYmxlPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFdhclBlcmZvcm1hbmNlO1xuIl19 */\\n/*@ sourceURL=/Users/mbp/Sites/london-clash-nextjs/components/WarPerformance.js */\"));\n};\n\nexport default WarPerformance;","map":{"version":3,"sources":["/Users/mbp/Sites/london-clash-nextjs/components/WarPerformance.js"],"names":["useState","WarUser","constructor","name","wins","battlesPlayed","battles","addWins","addBattles","ratio","processData","items","participants","findUser","find","p","forEach","war","i","user","userObj","push","alt","sortData","key","sort","a","b","WarPerformance","props","setSort","data","setData","state","sortedData","map"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAN,CAAc;AACZC,EAAAA,WAAW,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAaC,IAAAA;AAAb,GAAD,EAA8B;AACvC,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKE,OAAL,GAAeD,aAAf;AACD;;AAEDE,EAAAA,OAAO,CAACH,IAAD,EAAO;AACZ,SAAKA,IAAL,IAAaA,IAAb;AACD;;AAEDI,EAAAA,UAAU,CAACF,OAAD,EAAU;AAClB,SAAKA,OAAL,IAAiBA,OAAjB;AACD;;AAED,MAAIG,KAAJ,GAAY;AACV,WAAO,KAAKL,IAAL,GAAY,KAAKE,OAAjB,IAA4B,CAAnC;AACD;;AAjBW;;AAoBd,MAAMI,WAAW,GAAIC,KAAD,IAAW;AAC7B,MAAIC,YAAY,GAAG,EAAnB;;AACA,QAAMC,QAAQ,GAAIV,IAAD,IAAUS,YAAY,CAACE,IAAb,CAAmBC,CAAD,IAAOA,CAAC,CAACZ,IAAF,KAAWA,IAApC,CAA3B;;AACAQ,EAAAA,KAAK,CAACK,OAAN,CAAc,CAACC,GAAD,EAAMC,CAAN,KAAY;AACtBD,IAAAA,GAAG,CAACL,YAAJ,CAAiBI,OAAjB,CAA0BG,IAAD,IAAU;AAC/B,UAAIC,OAAO,GAAGP,QAAQ,CAACM,IAAI,CAAChB,IAAN,CAAtB;;AACA,UAAI,CAAC,CAACiB,OAAN,EAAe;AACXA,QAAAA,OAAO,CAACZ,UAAR,CAAmBW,IAAI,CAACd,aAAxB;AACAe,QAAAA,OAAO,CAACb,OAAR,CAAgBY,IAAI,CAACf,IAArB;AACH,OAHD,MAGO;AACHgB,QAAAA,OAAO,GAAG,IAAInB,OAAJ,CAAYkB,IAAZ,CAAV;AACAP,QAAAA,YAAY,CAACS,IAAb,CAAkBD,OAAlB;AACH;AACJ,KATD;AAUH,GAXD;AAYA,SAAOR,YAAP;AACD,CAhBD;;AAkBA,IAAIU,GAAG,GAAG,IAAV;;AACA,MAAMC,QAAQ,GAAG,CAACZ,KAAD,EAAQa,GAAR,KAAgB;AAC/BF,EAAAA,GAAG,IAAIA,GAAP;AACA,SAAOX,KAAK,CAACc,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUL,GAAG,GAAGI,CAAC,CAACF,GAAD,CAAD,GAASG,CAAC,CAACH,GAAD,CAAb,GAAqBE,CAAC,CAACF,GAAD,CAAD,GAASG,CAAC,CAACH,GAAD,CAAvD,CAAP;AACD,CAHD;;AAKA,MAAMI,cAAc,GAAIC,KAAD,IAAW;AAEhC,QAAM;AAAA,OAACJ,IAAD;AAAA,OAAOK;AAAP,MAAkB9B,QAAQ,CAAC,CAAC,MAAD,CAAD,CAAhC;AACA,QAAM;AAAA,OAAC+B,IAAD;AAAA,OAAOC;AAAP,MAAkBhC,QAAQ,CAACU,WAAW,CAACmB,KAAK,CAAClB,KAAP,CAAZ,CAAhC;AACA,QAAMsB,KAAK,GAAG,OAAd;AAEA,QAAMC,UAAU,GAAGX,QAAQ,CAACQ,IAAD,EAAON,IAAP,CAA3B;AAEA,SACE;AAAA,wCAAkB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAI,IAAA,OAAO,EAAG,MAAMK,OAAO,GAAG,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF,EAOGI,UAAU,CAACC,GAAX,CAAe,CAACpB,CAAD,EAAIG,CAAJ,KACd;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAC,CAACZ,IAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKY,CAAC,CAACX,IAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKW,CAAC,CAACT,OAAP,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKS,CAAC,CAACN,KAAP,CAJF,CADD,CAPH;AAAA;AAAA;AAAA,6pHADF;AAmCD,CA3CD;;AA6CA,eAAemB,cAAf","sourcesContent":["import { useState } from 'react'\n\nclass WarUser {\n  constructor({name, wins, battlesPlayed}) {\n    this.name = name\n    this.wins = wins\n    this.battles = battlesPlayed\n  }\n\n  addWins(wins) {\n    this.wins += wins\n  }\n\n  addBattles(battles) {\n    this.battles +=  battles\n  }\n\n  get ratio() {\n    return this.wins / this.battles || 0\n  }\n}\n\nconst processData = (items) => {\n  let participants = []\n  const findUser = (name) => participants.find((p) => p.name === name);\n  items.forEach((war, i) => {\n      war.participants.forEach((user) => {\n          var userObj = findUser(user.name)\n          if (!!userObj) {\n              userObj.addBattles(user.battlesPlayed)\n              userObj.addWins(user.wins)\n          } else {\n              userObj = new WarUser(user)\n              participants.push(userObj)\n          }\n      })\n  })\n  return participants\n}\n\nlet alt = true\nconst sortData = (items, key) => {\n  alt != alt\n  return items.sort((a, b) => alt ? a[key] - b[key] : a[key] - b[key])\n}\n\nconst WarPerformance = (props) => {\n\n  const [sort, setSort] = useState(['wins'])\n  const [data, setData] = useState(processData(props.items))\n  const state = 'hello'\n\n  const sortedData = sortData(data, sort)\n\n  return (\n    <table className={'table'}>\n      <tr className={'header'}>\n        <th>Name</th>\n        <th>Wins</th>\n        <th>Battles</th>\n        <th onClick={(() => setSort = 'blll')}>Ratio</th>\n      </tr>\n      {sortedData.map((p, i) => (\n        <tr key={i}>\n          <td>{p.name}</td>\n          <td>{p.wins}</td>\n          <td>{p.battles}</td>\n          <td>{p.ratio}</td>\n        </tr>\n      ))}\n      <style jsx>{`\n        .table {\n          width: 100%;\n        }\n        .table .header {\n          font-weight: bold;\n        }\n        .table > div {\n          display: grid;\n          grid-template-columns: 20% 20% 30% 30%;\n          // grid-template-rows: 100vh;\n        }\n        .table > div span {\n          flex-grow: 1;\n          text-align: left;\n        }\n      `}</style>\n    </table>\n  )\n}\n\nexport default WarPerformance;\n"]},"metadata":{},"sourceType":"module"}